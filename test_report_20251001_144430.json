{
  "passed": [
    {
      "test": "Import Flask",
      "message": "Flask imported successfully",
      "timestamp": "2025-10-01 14:44:29"
    },
    {
      "test": "Import Flask-SQLAlchemy",
      "message": "Flask-SQLAlchemy imported successfully",
      "timestamp": "2025-10-01 14:44:29"
    },
    {
      "test": "Import Flask-Migrate",
      "message": "Flask-Migrate imported successfully",
      "timestamp": "2025-10-01 14:44:29"
    },
    {
      "test": "Import Requests",
      "message": "Requests imported successfully",
      "timestamp": "2025-10-01 14:44:29"
    },
    {
      "test": "Import qBittorrent-API",
      "message": "qBittorrent-API imported successfully",
      "timestamp": "2025-10-01 14:44:29"
    },
    {
      "test": "Config: SECRET_KEY",
      "message": "Config attribute exists",
      "timestamp": "2025-10-01 14:44:29"
    },
    {
      "test": "Config: SQLALCHEMY_DATABASE_URI",
      "message": "Config attribute exists",
      "timestamp": "2025-10-01 14:44:29"
    },
    {
      "test": "Config: SQLALCHEMY_TRACK_MODIFICATIONS",
      "message": "Config attribute exists",
      "timestamp": "2025-10-01 14:44:29"
    },
    {
      "test": "Application Setup",
      "message": "Flask app initialized successfully",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Model: MovieIdentifier",
      "message": "Model defined with table: movie_identifier",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Model: Lottery",
      "message": "Model defined with table: lottery",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Model: Movie",
      "message": "Model defined with table: movie",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Model: LibraryMovie",
      "message": "Model defined with table: library_movie",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Model: BackgroundPhoto",
      "message": "Model defined with table: background_photo",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Database Operations",
      "message": "Create and retrieve lottery successful",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Database Relationships",
      "message": "Lottery-Movie relationship works",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Route: Index Page",
      "message": "GET / returned 200",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Route: History Page",
      "message": "GET /history returned 200",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Route: Library Page",
      "message": "GET /library returned 200",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "API: /api/active-downloads",
      "message": "Endpoint works correctly",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "API: /api/create validation",
      "message": "Validation works correctly",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Helper: generate_unique_id",
      "message": "Generates correct length IDs",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Helper: unique IDs",
      "message": "Generated IDs are unique",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Static: style.css",
      "message": "File exists",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Static: main.js",
      "message": "File exists",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Static: play.js",
      "message": "File exists",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Static: toast.js",
      "message": "File exists",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Template: index.html",
      "message": "Valid HTML structure",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Template: history.html",
      "message": "Valid HTML structure",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Template: library.html",
      "message": "Valid HTML structure",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Template: play.html",
      "message": "Valid HTML structure",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Template: wait.html",
      "message": "Valid HTML structure",
      "timestamp": "2025-10-01 14:44:30"
    },
    {
      "test": "Code Quality: Duplicate Code",
      "message": "No duplicate code blocks found",
      "timestamp": "2025-10-01 14:44:30"
    }
  ],
  "failed": [],
  "warnings": [
    {
      "test": "Config: QBIT_HOST",
      "message": "qBittorrent QBIT_HOST not configured (optional)",
      "timestamp": "2025-10-01 14:44:29"
    },
    {
      "test": "Config: QBIT_PORT",
      "message": "qBittorrent QBIT_PORT not configured (optional)",
      "timestamp": "2025-10-01 14:44:29"
    },
    {
      "test": "Config: QBIT_USERNAME",
      "message": "qBittorrent QBIT_USERNAME not configured (optional)",
      "timestamp": "2025-10-01 14:44:29"
    },
    {
      "test": "Config: QBIT_PASSWORD",
      "message": "qBittorrent QBIT_PASSWORD not configured (optional)",
      "timestamp": "2025-10-01 14:44:29"
    }
  ],
  "info": [
    {
      "test": "Database Location",
      "message": "Using: sqlite:///F:\\GPT\\movie-lottery-refactored\\instance\\lottery.db",
      "timestamp": "2025-10-01 14:44:30"
    }
  ]
}